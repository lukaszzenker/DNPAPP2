@page "/AddGrade"
@using Blazor.Data
@using DomainLibrary
@using System.Text.Json
@using System.Text

@inject IStudentService studentService
@inject NavigationManager NavMgr


<h3>AddGrade</h3>

@if (students == null)
{
    <label>loading..</label>
}
else
{
      <EditForm Model="@grade" OnValidSubmit="AddNewGrade">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="issueChild">Choose A Student</label>
            <select @bind="selectedStudent">
                @foreach (Student student in students)
                {
                    <option value="@student.studentId">@student.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            CourseCode: <br />
            <InputText @bind-Value="grade.CourseCode" />
        </div>
        <div class="form-group">
            <label for="issueChild">Choose A Grade</label>
            <select @bind="grade.Grade">
               
                <option value="-3">-3</option>
                <option value="00">00</option>
                <option value="02">02</option>
                <option value="4">4</option>
                <option value="7">7</option>
                <option value="10">10</option>
                <option value="12">12</option>
            </select>
        </div>
        <p class="actions">
            <button class="btn btn-outline-dark" type="submit">Create</button>
        </p>
      </EditForm>


@code {
    private GradeInCourse grade = new GradeInCourse();
    private List<Student> students = new List<Student>();
    int selectedStudent;
    String selectedCourse;

    protected override async Task OnInitializedAsync()
    {
        students = await studentService.GetAllStudentsAsync();
    }
    private async void AddNewGrade()
    {
        await studentService.AddGradeToStudentAsync(grade, selectedStudent);
    }
}
}